\documentclass{article}

\usepackage{amsmath, amsthm, amsfonts}
\usepackage{enumerate}
\usepackage{hyperref}

\title{Assignment 2}
\author{Anh Le}

\begin{document}

\maketitle

<<>>=
## knitr configuration: http://yihui.name/knitr/options#chunk_options
opts_chunk$set(comment = "", error= TRUE, warning = FALSE, message = FALSE,
               tidy = FALSE, cache = F, echo = T,
               fig.width = 4, fig.height = 4, fig.align="center")
@


\section{Question 1}

Let's pursue further the in-class example of ordering / selecting one variable based on another. We have the following mock data.
<<>>=
mock_data <- data.frame(country=c("US", "UK", "South Africa", "Liberia"),
                         region=c("America", "Europe", "Africa", "Africa"),
                         gdppc=c(40000, 35000, 25000, 9000),
                         stringsAsFactors=FALSE)
mock_data
@

What I showed you in class is to select the \verb`country` variable based on the \verb`gdppc` variable, like so:
<<>>=
# Get countries with GDP per capita > 10000
mock_data$country[mock_data$gdppc > 10000]
# Get countries with above-average GDP per capita
mock_data$country[mock_data$gdppc > mean(mock_data$gdppc)]
@

Now, the question is how to select countries that have \verb`gdppc > 10000` AND belong in Africa? Phrased more generally, how do we subset the data frame using two / multiple conditions? (Google if you don't know how -- I have phrased the question in very Google-able terms)

So here's your first assignment.
\begin{enumerate}
  \item Using the mock data above, select Africans countries that have \verb`gdppc > 10000`.
  \item Download real data from package \verb`WDI`, the subset the data according to some conditions that interests you. (E.g. List all African countries that have below / above average GDP per capita; What about other continents? Variables other than GDP, etc.)
\end{enumerate}

\textbf{Solution}

\begin{enumerate}
 \item Using mock data
<<>>=
mock_data$country[(mock_data$gdppc > 10000) & (mock_data$region == "Africa")]

# Equivalent, less typing way
with(mock_data, country[gdppc > 10000 & region == "Africa"])
@

  \item Using real data
<<>>=
library("WDI")
search_res <- WDIsearch(string="health")
world_data <- WDI(country="all", indicator = c("NY.GDP.PCAP.CD", "SH.XPD.PCAP"),
                   start = 2010, end = 2010, extra=TRUE)
world_data <- world_data[world_data$region != "Aggregates", ]
world_data <- world_data[complete.cases(world_data), ]
@

Countries with above average GDP per capita but below average health expenditure per capita
<<>>=
with(world_data, country[NY.GDP.PCAP.CD > mean(NY.GDP.PCAP.CD, na.rm=T) &
                           SH.XPD.PCAP < mean(SH.XPD.PCAP, na.rm=T)])
@

Which region do these countries belong?
<<>>=
with(world_data, region[NY.GDP.PCAP.CD > mean(NY.GDP.PCAP.CD, na.rm=T) &
                           SH.XPD.PCAP < mean(SH.XPD.PCAP, na.rm=T)])
@

The result is a factor vector, let's convert to character for easy reading

<<>>=
as.character(with(world_data, region[NY.GDP.PCAP.CD > mean(NY.GDP.PCAP.CD, na.rm=T) &
                           SH.XPD.PCAP < mean(SH.XPD.PCAP, na.rm=T)]))
@

Still a bit ugly with the \verb`(all income levels)`. Let's clean up using \verb`strsplit()` we learned in class
<<>>=
regions_of_interests <- as.character(with(world_data,
  region[NY.GDP.PCAP.CD > mean(NY.GDP.PCAP.CD, na.rm=T) &
  SH.XPD.PCAP < mean(SH.XPD.PCAP, na.rm=T)]))

unlist(strsplit(regions_of_interests, split=" \\(all income levels)"))
@

\end{enumerate}

\section{Problem 2 -- Problem 1.9.1 in the book}

This problem involves data frame -- re-read the book chapter on data frame if necessary
<<>>=
library(DAAG) # install if you have it yet
@

The following table gives the size of the floor area (ha) and
  the price (\$000), for 15 houses sold in the Canberra (Australia)
  suburb of Aranda in 1999.


<<>>=
houseprices
@


\begin{enumerate}
\item Plot \verb+sale.price+ versus \verb+area+.
\item Use the \verb+hist()+ command to plot a histogram of the sale prices.
\item Repeat (a) and (b) after taking logarithms of sale prices.
\item The two histograms emphasize different parts of the range of sale prices. Describe the differences.
\end{enumerate}

\textbf{Solution}

\begin{enumerate}
\item Plot \verb`sale.price()` versus \verb`area()`
<<>>=
plot(sale.price ~ area, data=houseprices,
     main="(a) Sale price vs area",
     xlab="Floor area", ylab="Sale price")
@

\item Use the \verb`hist()` command to plot a histogram of the sale prices
<<>>=
hist(houseprices$sale.price)
@

\item The following code demonstrates the use of the
\verb+log="y"+ argument to cause \verb+plot+ to use a logarithmic
scale on the \verb+y+ axis, but with axis tick labels that are
specified in the original units.

The next oneputs a logarithmic scale on the $x$-axis
of the histogram.
<<fig.width=8>>=
par(mfrow=c(1, 2))
plot(sale.price ~ area, data=houseprices, log="y",
     pch=16, xlab="Floor Area", ylab="Sale Price",
     main="(c) log(sale.price) vs area")
hist(log(houseprices$sale.price),
     xlab="Sale Price (logarithmic scale)",
     main="(c)  Histogram of log(sale.price)")
par(mfrow=c(1, 1))
@

\item Compare the two histograms

<<fig.width=8>>=
par(mfrow=c(1, 2))
hist(houseprices$sale.price,
     xlab="Sale Price",
     main="Histogram of sale.price")
hist(log(houseprices$sale.price),
     xlab="Sale Price (logarithmic scale)",
     main="Histogram of log(sale.price)")
par(mfrow=c(1, 1))
@
\end{enumerate}

At log scale, the small difference (i.e. to the left of the axis) is indistinguisable. The log scale emphasizes the larger spread. To see this more clearly, consider the following plot:

<<>>=
plot(log(seq(100:400)), type="l", ylab="log_sale_price", xlab="sale_price")
abline(v=exp(2), col="red")
abline(v=exp(3), col="red")
abline(v=exp(4), col="blue")
abline(v=exp(5), col="blue")
@

Notice that one unit increase in \verb`log_sale_price` does not correspond with the same increase in \verb`sale_price`. For example, \verb`log_sale_price` increases from 2 to 3 between the red lines, and from 4 to 5 between the blue lines (an increase of 1 in both cases). However, the change of \verb`sale_price` between the blue lines is much greater than between the red lines. More generally, the farther we are to the right, the larger 1 unit in log scale becomes.

Back to our original question, this means that to the right of our log scale histogram, one unit in the x axis covers a lot more houses. Thus, the histogram is higher to the right.
\end{document}
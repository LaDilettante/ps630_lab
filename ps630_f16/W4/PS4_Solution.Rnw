\documentclass{article}

\usepackage{amsmath, amssymb}
\usepackage{graphicx}
\usepackage{hyperref}

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{Pol Sci 630: Problem Set 4 Solution - Regression Model Estimation}

\author{Prepared by: Anh Le (\href{mailto:anh.le@duke.edu}{anh.le@duke.edu})}

\date{Due Date: Wed, September 28, 2015 (Beginning of Class)}

\maketitle

\section{Subset data frame}

\subsection{Download data}

Download the following data from \verb`WDI` and clean it as follows. Briefly comment on what each command does.

<<>>=
library(WDI)
d_wdi <- WDI(indicator = c("NY.GDP.PCAP.CD", "SP.DYN.IMRT.IN", "SH.MED.PHYS.ZS"),
             start = 2005, end = 2010, extra = TRUE)
d_wdi <- d_wdi[d_wdi$region != "Aggregates",
       c("country", "year", "NY.GDP.PCAP.CD", "SP.DYN.IMRT.IN", "SH.MED.PHYS.ZS")]
colnames(d_wdi)[3:5] <- c('gdppc', 'infant_mortality', 'number_of_physician')
d_wdi <- na.omit(d_wdi)
@

\verb`infant_mortality`: number of mortality per 1000 live births

\verb`number_of_physician`: number of physician per 1000 people

\subsection{Subsetting}

Use subsetting techniques to do the following:

\begin{enumerate}
\item Show the GDP per capita of Brazil across years
\item Show the country-years where infant mortality $>$ 100 per 1000 live birth
\item Show the country-years where GDP per capita is above average
\item Show the country-years where GDP per capita is above average, but number of physician is below average
\end{enumerate}

\textbf{Solution}

<<>>=
library(WDI)

# Download data from WDI, specifying the indicators and start / end year
d_wdi <- WDI(indicator = c("NY.GDP.PCAP.CD", "SP.DYN.IMRT.IN", "SH.MED.PHYS.ZS"),
             start = 2008, end = 2010, extra = TRUE)

# Remove aggregates rows, selecting wanted columns by name
d_wdi <- d_wdi[d_wdi$region != "Aggregates",
       c("country", "year", "NY.GDP.PCAP.CD", "SP.DYN.IMRT.IN", "SH.MED.PHYS.ZS")]

# Rename some of the columns
colnames(d_wdi)[3:5] <- c('gdppc', 'infant_mortality', 'number_of_physician')

# Remove all rows that have missing data
d_wdi <- na.omit(d_wdi)
@

<<>>=
# 1. Show the GDP per capita of Brazil across years
d_wdi[d_wdi$country == "Brazil", c("country", "year", "gdppc")]

# 2. Show the country-years where infant mortality > 100 per 1000 live birth
d_wdi[d_wdi$infant_mortality > 100, c("country", "year", "infant_mortality")]

# 3. Show the country-years where GDP per capita is above average
d_wdi[d_wdi$gdppc > mean(d_wdi$gdppc), c("country", "year", "gdppc")]

# 4. Show the country-years where GDP per capita is above average,
# but number of physician is below average
d_wdi[d_wdi$gdppc > mean(d_wdi$gdppc) &
        d_wdi$number_of_physician < mean(d_wdi$number_of_physician),
      c("country", "year", "gdppc")]
@

\section{Build linear model}

\subsection{Download}

Download 2 variables of interest and build a linear model of their relationship using \verb`lm()`. Show the \verb`summary()` of results.

\subsection{Calculate the regression coefficients WITHOUT using `lm`}

Use the mathematical formula of the regression coefficients you saw in class and implement it in R. Is this result the same as the result output by `lm`?

\subsection{Model output}

Show the result with \verb`stargazer`, customizing:
\begin{itemize}
\item The labels of the independent variables (i.e. the covariate)
\item The label of the dependent variable
\item Make the model name (i.e. OLS) show up
\end{itemize}

Hint: The options to do those things are in \verb`help(stargazer)`. I have worded the task in a way that should help you find the relevant options.

\textbf{Solution}

Build the linear model

<<>>=
m1 <- lm(infant_mortality ~ gdppc, data = d_wdi)
summary(m1)
@

Calculate the regression coef by hand, using covariance and variance:

<<>>=
cov(d_wdi$infant_mortality, d_wdi$gdppc) / var(d_wdi$gdppc)
@

or fully by hand (the result will be slightly different because R's `cov` and `var` divided by `n - 1` while `mean` divides by `n`) (read more at \url{http://nebula.deanza.edu/~bloom/math10/m10divideby_nminus1.pdf}):

<<>>=
mean((d_wdi$infant_mortality - mean(d_wdi$infant_mortality)) *
       d_wdi$gdppc - mean(d_wdi$gdppc)) /
  mean((d_wdi$gdppc - mean(d_wdi$gdppc))**2)
@


<<results='asis'>>=
library(stargazer)
stargazer(m1,
          covariate.labels = c("GDP per capita"),
          dep.var.labels = c("Infant Mortality (per 1000 births)"),
          model.names = TRUE)
@

\section{Calculate sum of squares and RMSE}

\begin{enumerate}
\item Extract the residuals and predicted values (fitted values) from the model object (from the linear model built above)
\item Calculate three ``sum of squares'' (TSS, RegSS, RSS)
\item Calculate the root mean square error and compare with R. (In R and stargazer, RMSE is called ``Residual standard error''.)
\end{enumerate}

Note: the data you feed to \verb`lm()` may have missing data, so R has to modify the data a little before using it. To extract the data that are actually used by \verb`lm()`, use \verb`my_model$model`. Use this data to calculate $\bar y$ in the sum of squares.

\textbf{Solution}

<<>>=
res <- m1$residuals # Residuals
pred <- m1$fitted.values # Predicted values
y <- m1$model$infant_mortality # Data of Y that is used by lm()

# Calculate 3 sum of squares
TSS <- sum( (y - mean(y)) ** 2)
RegSS <- sum( (pred - mean(y)) ** 2)
RSS <- sum( res ** 2 )

# Calculate root mean square error
N <- nrow(d_wdi)
k <- 1 # We only have 1 predictor, which is log_gdppc
rmse <- sqrt(RSS / (N - k - 1))
@

The calculated root mean square error is \Sexpr{rmse}, the same as reported by R in \verb`summary(m1)`.

\section{Explore why we have standard errors}

<<>>=
x <- rnorm(mean = 5, 100)
y <- 1 + 2 * x + rnorm(100)
plot(y, x)

c_nsim <- 100
model_data <- vector("list", length = c_nsim)
model_results <- vector("list", length = c_nsim)
for (i in 1:c_nsim) {
  sample_index <- sample(100, 10, replace = TRUE)
  sample_x <- x[sample_index]
  sample_y <- y[sample_index]
  model_data[[i]] <- list(sample_x, sample_y)
  model_results[[i]] <- lm(sample_y ~ sample_x)
}

plot(y, x)
for (i in 1:c_nsim) {

}
@


\end{document}